{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\OneDrive\\\\Skrivbord\\\\E-comm\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Store } from \"../Store\";\nimport axios from \"axios\";\nimport { getError } from '../utils';\nimport Helmet from \"react-helmet-async\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        orders: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function OrderListScreen() {\n  _s();\n\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    orders\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/orders`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Ordrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ordrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderListScreen, \"iac55q4uvdioOhdSuM//aHRGZTY=\");\n\n_c = OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","Store","axios","getError","Helmet","reducer","state","action","type","loading","orders","payload","error","OrderListScreen","userInfo","dispatch","fetchData","data","get","headers","Authorization","token","err"],"sources":["C:/Users/jonas/OneDrive/Skrivbord/E-comm/frontend/src/screens/OrderListScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from 'react'\r\nimport {Store} from \"../Store\"\r\nimport axios from \"axios\"\r\nimport { getError } from '../utils';\r\nimport Helmet from \"react-helmet-async\"\r\nconst reducer = (state, action) => {\r\nswitch (action.type) {\r\ncase 'FETCH_REQUEST':\r\n    return{...state, loading: true}\r\n    case 'FETCH_SUCCESS':\r\n        return {\r\n            ...state,\r\n            orders: action.payload,\r\n            loading: false\r\n        };\r\n        case 'FETCH_FAIL':\r\n            return {...state, loading: false, error: action.payload};\r\n            default:\r\n                return state;\r\n\r\n}\r\n}\r\n\r\n\r\n\r\nexport default function OrderListScreen() {\r\n\r\nconst {state} = useContext(Store)\r\nconst {userInfo} = state;\r\nconst [{loading, error, orders}, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error:''\r\n})\r\n\r\nuseEffect(() => {\r\nconst fetchData = async () => {\r\ntry {\r\n    dispatch({type: 'FETCH_REQUEST'})\r\n    const {data} = await axios.get(`/api/orders`, {\r\n        headers: {Authorization: `Bearer ${userInfo.token}`}\r\n\r\n    });\r\n\r\n    dispatch({type: 'FETCH_SUCCESS', payload: data})\r\n}catch(err) {\r\n    dispatch({\r\n        type:'FETCH_FAIL',\r\n        payload: getError(err),\r\n    })\r\n}\r\n}\r\nfetchData()\r\n},[userInfo])\r\n  return (\r\n    <div>\r\n        <Helmet>\r\n            <title>Ordrar</title>\r\n        </Helmet>\r\n\r\n        <h1>Ordrar</h1>\r\n        <LoadingBox></LoadingBox>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACA,KAAK,eAAL;MACI,OAAM,EAAC,GAAGF,KAAJ;QAAWG,OAAO,EAAE;MAApB,CAAN;;IACA,KAAK,eAAL;MACI,OAAO,EACH,GAAGH,KADA;QAEHI,MAAM,EAAEH,MAAM,CAACI,OAFZ;QAGHF,OAAO,EAAE;MAHN,CAAP;;IAKA,KAAK,YAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAWG,OAAO,EAAE,KAApB;QAA2BG,KAAK,EAAEL,MAAM,CAACI;MAAzC,CAAP;;IACA;MACI,OAAOL,KAAP;EAZhB;AAeC,CAhBD;;AAoBA,eAAe,SAASO,eAAT,GAA2B;EAAA;;EAE1C,MAAM;IAACP;EAAD,IAAUR,UAAU,CAACG,KAAD,CAA1B;EACA,MAAM;IAACa;EAAD,IAAaR,KAAnB;EACA,MAAM,CAAC;IAACG,OAAD;IAAUG,KAAV;IAAiBF;EAAjB,CAAD,EAA2BK,QAA3B,IAAuCf,UAAU,CAACK,OAAD,EAAU;IAC7DI,OAAO,EAAE,IADoD;IAE7DG,KAAK,EAAC;EAFuD,CAAV,CAAvD;EAKAb,SAAS,CAAC,MAAM;IAChB,MAAMiB,SAAS,GAAG,YAAY;MAC9B,IAAI;QACAD,QAAQ,CAAC;UAACP,IAAI,EAAE;QAAP,CAAD,CAAR;QACA,MAAM;UAACS;QAAD,IAAS,MAAMf,KAAK,CAACgB,GAAN,CAAW,aAAX,EAAyB;UAC1CC,OAAO,EAAE;YAACC,aAAa,EAAG,UAASN,QAAQ,CAACO,KAAM;UAAzC;QADiC,CAAzB,CAArB;QAKAN,QAAQ,CAAC;UAACP,IAAI,EAAE,eAAP;UAAwBG,OAAO,EAAEM;QAAjC,CAAD,CAAR;MACH,CARD,CAQC,OAAMK,GAAN,EAAW;QACRP,QAAQ,CAAC;UACLP,IAAI,EAAC,YADA;UAELG,OAAO,EAAER,QAAQ,CAACmB,GAAD;QAFZ,CAAD,CAAR;MAIH;IACA,CAfD;;IAgBAN,SAAS;EACR,CAlBQ,EAkBP,CAACF,QAAD,CAlBO,CAAT;EAmBE,oBACE;IAAA,wBACI,QAAC,MAAD;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAtCuBD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}